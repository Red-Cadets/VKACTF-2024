import os
from Crypto.Cipher import AES
from Crypto.Util.number import long_to_bytes


def attack_secret(p, s_, x, y, y_, xs):

    const = 1
    for i in xs:
        try:
            const *= i * pow(i - x, -1, p)
        except:
            pass

    return ((y - y_) * (const % p) + s_) % p

def get_iv_x_y_ct(directory):
    iv, x, y, ct = [], [], [], []
    for filename in os.listdir(directory):
        filepath = os.path.join(directory, filename)
        if os.path.isfile(filepath):
            with open(filepath, 'r+b') as file:
                try:
                    iv.append(file.read(16))
                    x.append(int.from_bytes(file.read(3), 'big')) 
                    y.append(int.from_bytes(file.read(66), 'big'))
                    ct.append(file.read())

                except IOError as e:
                    print(f"Ошибка при обработке файла {filepath}: {e}")
    return iv, x, y, ct


DIR_1 = './shares/2024-05-29_00-49-54'
DIR_2 = './shares/2024-05-29_00-50-23'
DIR_3 = './shares/2024-05-29_00-51-01'

key_int = 60491296318766210460993916541150668924040666701373348078955638078069745722239

p = 2 ** 521 - 1

iv_1, x_1, y_1, ct_1 = get_iv_x_y_ct(DIR_1)
assert ct_1[0] == ct_1[1]

iv_2, x_2, y_2, ct_2 = get_iv_x_y_ct(DIR_2)
assert ct_2[0] == ct_2[1]

iv_3, x_3, y_3, ct_3 = get_iv_x_y_ct(DIR_3)

key_2_int = attack_secret(p, key_int, x_3[0], y_3[0], y_2[x_3[0]-1], x_2) ####
print("Cracked key:", key_2_int)
key_2 = int.to_bytes(key_2_int, 32, 'big')

cipher = AES.new(key_2, AES.MODE_OFB, iv_3[0])
pt = cipher.decrypt(ct_3[0])

with open('flag.png', 'wb') as f:
    f.write(pt)

print("Your flag image is in 'flag.png'")